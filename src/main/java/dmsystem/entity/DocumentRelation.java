package dmsystem.entity;

import javax.persistence.AssociationOverride;
import javax.persistence.AssociationOverrides;
import javax.persistence.EmbeddedId;
import javax.persistence.JoinColumn;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * Document generated by Justin Yang
 */
@Entity
@Table(name = "DocumentRelation", catalog = "mydb")
@AssociationOverrides({
		@AssociationOverride(name = "pk.referer", joinColumns = @JoinColumn(name = "refererId")),
		@AssociationOverride(name = "pk.referee", joinColumns = @JoinColumn(name = "refereeId")),
		@AssociationOverride(name = "pk.relationType", joinColumns = @JoinColumn(name = "relationTypeId")) })
public class DocumentRelation implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5895801624901036827L;
	private DocumentRelationId pk = new DocumentRelationId();

	@EmbeddedId
	public DocumentRelationId getPk() {
		return pk;
	}

	public void setPk(DocumentRelationId pk) {
		this.pk = pk;
	}
	
	@Transient
	public Document getReferer() {
		return getPk().getReferer();
	}
 
	public void setReferer(Document referer) {
		getPk().setReferer(referer);
	}
 
	@Transient
	public Document getReferee() {
		return getPk().getReferee();
	}
 
	public void setReferee(Document referee) {
		getPk().setReferee(referee);
	}
	
	@Transient
	public RelationType getRelationType() {
		return getPk().getRelationType();
	}
	
	public void setRelationType(RelationType relationType) {
		getPk().setRelationType(relationType);
	}
	
	public boolean equals(Object o) {
		if (this == o)
			return true;
		if (o == null || getClass() != o.getClass())
			return false;
 
		DocumentRelation that = (DocumentRelation) o;
 
		if (getPk() != null ? !getPk().equals(that.getPk())
				: that.getPk() != null)
			return false;
 
		return true;
	}
 
	public int hashCode() {
		return (getPk() != null ? getPk().hashCode() : 0);
	}
}
