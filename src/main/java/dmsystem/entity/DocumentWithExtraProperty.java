package dmsystem.entity;

// Generated Dec 16, 2013 7:25:34 PM by Hibernate Tools 4.0.0

import javax.persistence.AssociationOverride;
import javax.persistence.AssociationOverrides;
import javax.persistence.JoinColumn;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * DocumentHasDocumentExtraProperty generated by Justin Yang
 */
@Entity
@Table(name = "Document_with_ExtraProperty", catalog = "mydb")
@AssociationOverrides({
		@AssociationOverride(name = "pk.document", joinColumns = @JoinColumn(name = "docId")),
		@AssociationOverride(name = "pk.documentExtraProperty", joinColumns = @JoinColumn(name = "docExtraProId")) })
public class DocumentWithExtraProperty implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2767376855147942111L;
	private DocumentWithExtraPropertyId pk = new DocumentWithExtraPropertyId();
	private String propertyValue;

	public DocumentWithExtraProperty() {
	}

	public DocumentWithExtraProperty(DocumentWithExtraPropertyId pk) {
		this.pk = pk;
	}

	@EmbeddedId
	public DocumentWithExtraPropertyId getPk() {
		return this.pk;
	}

	public void setPk(DocumentWithExtraPropertyId pk) {
		this.pk = pk;
	}
	
	@Transient
	public Document getDocument() {
		return getPk().getDocument();
	}
	
	public void setDocument(Document document) {
		getPk().setDocument(document);;
	}
	
	@Transient
	public DocumentExtraProperty getDocumentExtraProperty() {
		return getPk().getDocumentExtraProperty();
	}
	
	public void setDocumentExtraProperty(DocumentExtraProperty documentExtraProperty) {
		getPk().setDocumentExtraProperty(documentExtraProperty);
	}

	@Column(name = "propertyValue", length = 45)
	public String getPropertyValue() {
		return this.propertyValue;
	}

	public void setPropertyValue(String propertyValue) {
		this.propertyValue = propertyValue;
	}

	public boolean equals(Object o) {
		if (this == o)
			return true;
		if (o == null || getClass() != o.getClass())
			return false;

		DocumentWithExtraProperty that = (DocumentWithExtraProperty) o;

		if (getPk() != null ? !getPk().equals(that.getPk())
				: that.getPk() != null)
			return false;

		return true;
	}

	public int hashCode() {
		return (getPk() != null ? getPk().hashCode() : 0);
	}
}
