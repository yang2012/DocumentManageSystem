package dmsystem.entity;

// Generated Dec 16, 2013 7:25:34 PM by Hibernate Tools 4.0.0

import java.util.*;

import javax.persistence.Transient;

/**
 * Document generated by Justin Yang
 */
public class Document implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -7162066275065672397L;
	private String id;
	private String title;
	private String author;
	private String year;
	private Integer pages;
	private String abstracts;
	private String keywords;
	private String url;
	private String publisher;
	private Date createTime;
	private DocumentType documentType;

    private Set<Tag> tags = new HashSet<Tag>(0);
    private Set<DocumentWithExtraProperty> extraProperties = new HashSet<DocumentWithExtraProperty>(
            0);

    private transient User user;
    private transient Set<Attachment> attachments = new HashSet<Attachment>(0);

    private transient Set<Evaluation> evaluations = new HashSet<Evaluation>(0);
	private transient Set<DocumentRelation> refererRelations = new HashSet<DocumentRelation>(
			0);
	private transient Set<DocumentRelation> refereeRelations = new HashSet<DocumentRelation>(
			0);

	public Document() {
	}

	public Document(String id, DocumentType documentType, User user) {
		this.id = id;
		this.setDocumentType(documentType);
		this.user = user;
	}

	public Document(String id, String title, String author, String year,
			Integer pages, String abstracts, String keywords, String url,
			String publisher, Date createTime, DocumentType documentType,
			User user) {
		this.id = id;
		this.title = title;
		this.author = author;
		this.year = year;
		this.pages = pages;
		this.abstracts = abstracts;
		this.keywords = keywords;
		this.url = url;
		this.publisher = publisher;
		this.createTime = createTime;
		this.setDocumentType(documentType);
		this.user = user;
	}

	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public String getAuthor() {
		return this.author;
	}

	public void setAuthor(String author) {
		this.author = author;
	}

	public String getYear() {
		return this.year;
	}

	public void setYear(String year) {
		this.year = year;
	}

	public Integer getPages() {
		return this.pages;
	}

	public void setPages(Integer pages) {
		this.pages = pages;
	}

	public String getAbstracts() {
		return this.abstracts;
	}

	public void setAbstracts(String abstracts) {
		this.abstracts = abstracts;
	}

	public String getKeywords() {
		return this.keywords;
	}

	public void setKeywords(String keywords) {
		this.keywords = keywords;
	}

	public String getUrl() {
		return this.url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	public String getPublisher() {
		return this.publisher;
	}

	public void setPublisher(String publisher) {
		this.publisher = publisher;
	}

	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	public DocumentType getDocumentType() {
		return documentType;
	}

	public void setDocumentType(DocumentType documentType) {
		this.documentType = documentType;
	}

	public User getUser() {
		return user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	public Set<DocumentWithExtraProperty> getExtraProperties() {
		return extraProperties;
	}

	public void setExtraProperties(
			Set<DocumentWithExtraProperty> extraProperties) {
		this.extraProperties = extraProperties;
	}

	public Set<Attachment> getAttachments() {
		return attachments;
	}

	public void setAttachments(Set<Attachment> attachments) {
		this.attachments = attachments;
	}

	public Set<Tag> getTags() {
		return tags;
	}

	public void setTags(Set<Tag> tags) {
		this.tags = tags;
	}

	public Set<DocumentRelation> getRefererRelations() {
		return refererRelations;
	}

	public void setRefererRelations(Set<DocumentRelation> refererRelations) {
		this.refererRelations = refererRelations;
	}

	public Set<DocumentRelation> getRefereeRelations() {
		return refereeRelations;
	}

	public void setRefereeRelations(Set<DocumentRelation> refereeRelations) {
		this.refereeRelations = refereeRelations;
	}

    public Set<Evaluation> getEvaluations() {
        return this.evaluations;
    }

    public void setEvaluations(Set<Evaluation> evaluations) {
        this.evaluations = evaluations;
    }

    @Transient
    public List<Evaluation> getPublishedEvaluations() {
        List<Evaluation> publishedEvaluations = new ArrayList<Evaluation>();
        for (Evaluation evaluation : this.evaluations) {
            if (evaluation.getPublished()) {
                publishedEvaluations.add(evaluation);
            }
        }

        Collections.sort(publishedEvaluations, new Comparator<Evaluation>() {
            public int compare(Evaluation o1, Evaluation o2) {
                return o2.getCreateTime().compareTo(o1.getCreateTime());
            }
        });
        return publishedEvaluations;
    }

    @Transient
    public Integer getAveragePoint() {
        Integer averagePoint = 0;
        Set<Evaluation> evaluations = this.evaluations;
        if (evaluations != null && evaluations.size() != 0) {
            Integer totalPoint = 0;
            for (Evaluation evaluation : evaluations) {
                Integer point = evaluation.getPoint();
                totalPoint += point == null ? 0 : point;
            }

            averagePoint = totalPoint / evaluations.size();
        }
        return averagePoint;
    }

    public void updateInfo(Document document) {
        String title = document.getTitle();
        if (title != null && !title.equals(this.title)) {
            this.title = title;
        }

        String author = document.getAuthor();
        if (author != null && !author.equals(this.author)) {
            this.author = author;
        }

        String url = document.getUrl();
        if (url != null && !url.equals(this.url)) {
            this.url = url;
        }

        String publisher = document.getPublisher();
        if (publisher != null && !publisher.equals(this.publisher)) {
            this.publisher = publisher;
        }

        String abstracts = document.getAbstracts();
        if (abstracts != null && !abstracts.equals(this.abstracts)) {
            this.abstracts = abstracts;
        }

        String keywords = document.getKeywords();
        if (keywords != null && !keywords.equals(this.keywords)) {
            this.keywords = keywords;
        }

        String year = document.getYear();
        if (year != null && !year.equals(this.year)) {
            this.year = year;
        }

        Integer pages = document.getPages();
        if (!pages.equals(this.pages)) {
            this.pages = pages;
        }
    }
}
