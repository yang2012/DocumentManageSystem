package dmsystem.entity;

import javax.persistence.AssociationOverride;
import javax.persistence.AssociationOverrides;
import javax.persistence.JoinColumn;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * DocumentWithExtraProperty generated by Justin Yang
 */
@Entity
@Table(name = "Evaluation_with_ExtraProperty", catalog = "mydb")
@AssociationOverrides({
		@AssociationOverride(name = "pk.evaluation", joinColumns = @JoinColumn(name = "evaluationId")),
		@AssociationOverride(name = "pk.evaluationExtraProperty", joinColumns = @JoinColumn(name = "evaluationExtraProId")) })
public class EvaluationWithExtraProperty implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1769070790656231325L;
	private EvaluationWithExtraPropertyId pk = new EvaluationWithExtraPropertyId();
	private String propertyValue;

	public EvaluationWithExtraProperty() {
	}

	public EvaluationWithExtraProperty(EvaluationWithExtraPropertyId pk) {
		this.pk = pk;
	}

	@EmbeddedId
	public EvaluationWithExtraPropertyId getPk() {
		return this.pk;
	}

	public void setPk(EvaluationWithExtraPropertyId pk) {
		this.pk = pk;
	}
	
	@Transient
	public Evaluation getEvaluation() {
		return getPk().getEvaluation();
	}
	
	public void setEvaluation(Evaluation evaluation) {
		getPk().setEvaluation(evaluation);;
	}
	
	@Transient
	public EvaluationExtraProperty getEvaluationExtraProperty() {
		return getPk().getEvaluationExtraProperty();
	}
	
	public void setEvaluationExtraProperty(EvaluationExtraProperty evaluationExtraProperty) {
		getPk().setEvaluationExtraProperty(evaluationExtraProperty);
	}

	@Column(name = "propertyValue", length = 45)
	public String getPropertyValue() {
		return this.propertyValue;
	}

	public void setPropertyValue(String propertyValue) {
		this.propertyValue = propertyValue;
	}

	public boolean equals(Object o) {
		if (this == o)
			return true;
		if (o == null || getClass() != o.getClass())
			return false;

		EvaluationWithExtraProperty that = (EvaluationWithExtraProperty) o;

		if (getPk() != null ? !getPk().equals(that.getPk())
				: that.getPk() != null)
			return false;

		return true;
	}

	public int hashCode() {
		return (getPk() != null ? getPk().hashCode() : 0);
	}
}
